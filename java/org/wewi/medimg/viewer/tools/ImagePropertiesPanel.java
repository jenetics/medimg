/**
 * ImagePropertiesPanel.java
 *
 * Created on 17. Februar 2003, 13:57
 */

package org.wewi.medimg.viewer.tools;

import java.util.Iterator;
import java.util.Map;
import javax.swing.table.TableModel;

import org.wewi.medimg.image.ImageProperties;

/**
 *
 * @author  Franz Wilhelmstötter
 * @version 0.1
 */
public class ImagePropertiesPanel extends javax.swing.JPanel {  
    private ImageProperties properties;
    
    /** Creates new form ImagePropertiesPanel */
    public ImagePropertiesPanel(ImageProperties properties) {
        this.properties = properties;
        initComponents();
        
        init();
    }
    
    private void init() {
        //Filling the imagePropertyTable with the ImageProperties
        updateTable();
    }
    
    private TableModel propertyTableModel(ImageProperties prop) {
        Object[][] data = new Object[prop.size()][2];
        
        int row = 0;
        Map.Entry entry;
        for (Iterator it = prop.iterator(); it.hasNext();) {
            entry = (Map.Entry)it.next();
            data[row][0] = entry.getKey();
            data[row][1] = entry.getValue();
            row++;            
        } 
        
        TableModel model = new javax.swing.table.DefaultTableModel(
                data,
                new String [] {
                    "Key", "Property"
                }
            ) {
                Class[] types = new Class [] {
                    java.lang.String.class, java.lang.String.class
                };

                public Class getColumnClass(int columnIndex) {
                    return types [columnIndex];
                }
            };   
        
        return model;
    }
    

    private ImageProperties updateImageProperties() {
        TableModel model = imagePropertyTable.getModel();
        properties.clear();
        
        for (int i = 0, n = model.getRowCount(); i < n; i++) {
            properties.setProperty((String)model.getValueAt(i,  0), 
                                   (String)model.getValueAt(i, 1));
        }
        
        return properties;
    }

    private void updateTable() {
        imagePropertyTable.setModel(propertyTableModel(properties));
    }
    
    public ImageProperties getImageProperties() {
        return properties;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        imagePropertyTable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        insertRowButton = new javax.swing.JButton();
        deleteRowButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();

        setLayout(new java.awt.BorderLayout());

        add(jPanel1, java.awt.BorderLayout.NORTH);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel2.setBorder(new javax.swing.border.TitledBorder(null, "Image-Properties", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 12)));
        imagePropertyTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Key", "Title 2"
            }
        ));
        jScrollPane1.setViewportView(imagePropertyTable);

        jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        add(jPanel2, java.awt.BorderLayout.CENTER);

        insertRowButton.setFont(new java.awt.Font("Dialog", 0, 12));
        insertRowButton.setText("insert");
        insertRowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertRowButtonActionPerformed(evt);
            }
        });

        jPanel3.add(insertRowButton);

        deleteRowButton.setFont(new java.awt.Font("Dialog", 0, 12));
        deleteRowButton.setText("delete");
        deleteRowButton.setToolTipText("null");
        deleteRowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteRowButtonActionPerformed(evt);
            }
        });

        jPanel3.add(deleteRowButton);

        okButton.setFont(new java.awt.Font("Dialog", 0, 12));
        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        jPanel3.add(okButton);

        add(jPanel3, java.awt.BorderLayout.SOUTH);

        add(jPanel4, java.awt.BorderLayout.EAST);

        add(jPanel5, java.awt.BorderLayout.WEST);

    }//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        // Add your handling code here:
        updateImageProperties();
    }//GEN-LAST:event_okButtonActionPerformed

    private void deleteRowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteRowButtonActionPerformed
        // Add your handling code here:
        int row = imagePropertyTable.getSelectedRow();
        if (row != -1) {
            properties.remove((String)imagePropertyTable.getValueAt(row, 0));
        }
        updateTable();
    }//GEN-LAST:event_deleteRowButtonActionPerformed

    private void insertRowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertRowButtonActionPerformed
        // Add your handling code here:
        int row = imagePropertyTable.getSelectedRow();
        int rowCount = imagePropertyTable.getRowCount();
        if (row == -1 || row == rowCount - 1) {
            properties.setProperty("Key" + rowCount, "Value" + rowCount);
        } else {
            properties.setProperty(row, "Key" +  rowCount, "Value" + rowCount);
        }
        
        updateTable();
    }//GEN-LAST:event_insertRowButtonActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton insertRowButton;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JButton okButton;
    private javax.swing.JButton deleteRowButton;
    private javax.swing.JTable imagePropertyTable;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
    
}
